name: Build and Push Docker Images to ECR

on: 
  push:
    branches: [ prod ]

jobs:
  build:
    name: Build and Push Images
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        AWS_REGION: us-east-1

    - name: Build, tag, and push my_db image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: clo835-assignment1
        IMAGE_TAG: latest
      run: |
        cd DockerCodes
        ls -ltra
        # Build my_db Docker image using the specified Dockerfile_mysql
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:my_db_$IMAGE_TAG -f Dockerfile_mysql .
        # Push the my_db Docker image to Amazon ECR
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:my_db_$IMAGE_TAG

    - name: Build, tag, and push my_app image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: clo835-assignment1
        IMAGE_TAG: latest
      run: |
        cd DockerCodes
        ls -ltra
        # Build my_app Docker image using the specified Dockerfile
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:my_app_$IMAGE_TAG -f Dockerfile .
        # Push the my_app Docker image to Amazon ECR
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:my_app_$IMAGE_TAG
